// <auto-generated />
using System;
using BanXeMay.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BanXeMay.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240626152742_AddTableOrder_OrderDetail")]
    partial class AddTableOrder_OrderDetail
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BanXeMay.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DisplayOrder = 1,
                            Name = "SUZUKI"
                        },
                        new
                        {
                            Id = 2,
                            DisplayOrder = 2,
                            Name = "ZAMAHA"
                        },
                        new
                        {
                            Id = 3,
                            DisplayOrder = 3,
                            Name = "HONDA"
                        });
                });

            modelBuilder.Entity("BanXeMay.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("BanXeMay.Models.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("BanXeMay.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Name = "RAIDER R150",
                            Price = 460000000.0
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Name = "BURGMAN STREET 125",
                            Price = 46000000.0
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Name = "V-STROM 250SX",
                            Price = 134000000.0
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            Name = "SATRIA F150",
                            Price = 50000000.0
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            Name = "LEXI",
                            Price = 47912344.0
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 2,
                            Name = "GRANDE",
                            Price = 460000000.0
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 2,
                            Name = "FREEGO",
                            Price = 300000000.0
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 2,
                            Name = "NVX",
                            Price = 34000000.0
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 3,
                            Name = "Wave Alpha",
                            Price = 22000000.0
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 3,
                            Name = "SH350i ",
                            Price = 1450000000.0
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 3,
                            Name = "Air Blade 2025",
                            Price = 57500000.0
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 3,
                            Name = "LEAD 125",
                            Price = 42500000.0
                        });
                });

            modelBuilder.Entity("BanXeMay.Models.OrderDetail", b =>
                {
                    b.HasOne("BanXeMay.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BanXeMay.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BanXeMay.Models.Product", b =>
                {
                    b.HasOne("BanXeMay.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
